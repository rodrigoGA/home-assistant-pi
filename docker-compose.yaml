version: '3'
services:
  homeassistant:
    container_name: home-assistant
    image: homeassistant/raspberrypi4-homeassistant:stable
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "10"
    volumes:
      # Data persistency
      - ./hass:/config
#    devices:
#      # Zwave cable
#      - /dev/ttyACM0:/dev/ttyACM0
#      # P1 cable
#      - /dev/ttyUSB0:/dev/ttyUSB0
    environment:
      - TZ=America/Montevideo
    depends_on:
      - influxdb
    restart: always
    network_mode: host

  influxdb:
    container_name: influxdb
    image: influxdb:latest
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "10"
    ports:
      - 8086:8086
    environment:
      INFLUXDB_DB: home_assistant
    volumes:
      # Data persistency
      - ./influxdb:/var/lib/influxdb
    restart: always
    network_mode: host

  grafana:
    container_name: grafana
    image: grafana/grafana:5.4.3
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "10"
    ports:
      - 3000:3000
    volumes:
      # Data persistency
      # sudo chown 472:472 ./grafana
      - ./grafana:/var/lib/grafana
    depends_on:
      - influxdb
    restart: always
    network_mode: host

  pihole:
    container_name: pihole
    image: pihole/pihole:master
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "10"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "80:80/tcp"
      - "443:443/tcp"
    environment:
      TZ: 'America/Montevideo'
      # WEBPASSWORD: 'set a secure password here or it will be random'
    # Volumes store your data between container upgrades
    volumes:
      # Data persistency
      - './pi-hole/etc-pihole/:/etc/pihole/'
      - './pi-hole/etc-dnsmasq.d/:/etc/dnsmasq.d/'
    dns:
      - 127.0.0.1
    # Recommended but not required (DHCP needs NET_ADMIN)
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN
    restart: always


  portainer:
      container_name: portainer
      image: portainer/portainer:1.24.0
      restart: always
      networks:
          - traefik_proxy
      volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - ./portainer/data:/data
      labels:
          - "traefik.enable=true"
          - "traefik.http.routers.portainer.rule=Host(`portainer.${INTERNAL_DOMAIN}`)"
          - "traefik.http.routers.portainer.entrypoints=web"
          - "traefik.http.routers.portainer.service=portainer"
          - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      logging:
          options:
              max-size: 10m